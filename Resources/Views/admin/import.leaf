#extend("layout"):
#export("title", "Import Data")
#export("content"):

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="mb-8">
            <div class="flex items-center">
                <a href="/admin/dashboard" class="inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700">
                    <svg class="flex-shrink-0 -ml-1 mr-1 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                    Dashboard
                </a>
            </div>
            <h1 class="mt-2 text-3xl font-bold leading-tight text-gray-900">Import Data</h1>
            <p class="mt-2 text-sm text-gray-600">Upload a SQL file to import data into your database</p>
        </div>

        <!-- Error Message -->
        #if(error):
        <div class="mb-6 bg-red-50 border border-red-200 rounded-md p-4">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm font-medium text-red-800">#(error)</p>
                </div>
                <div class="ml-auto pl-3">
                    <div class="-mx-1.5 -my-1.5">
                        <button type="button" class="inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600" onclick="this.parentElement.parentElement.parentElement.parentElement.remove()">
                            <span class="sr-only">Dismiss</span>
                            <svg class="h-3 w-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        #endif

        <!-- Import Form -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">
                <div class="mb-6">
                    <h3 class="text-lg font-medium text-gray-900 mb-2">Upload SQL File</h3>
                    <p class="text-sm text-gray-500 mb-4">
                        Select a SQL file exported from this system. The file should contain INSERT statements for books, prakarans, and chaupais.
                    </p>
                    
                    <!-- Warning -->
                    <div class="bg-red-50 border border-red-200 rounded-md p-4 mb-6">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <h3 class="text-sm font-medium text-red-800">
                                    Warning: This will completely replace your existing database
                                </h3>
                                <div class="mt-2 text-sm text-red-700">
                                    <p>
                                        <strong>All existing data will be permanently deleted before importing.</strong>
                                        This includes all books, prakarans, and chaupais currently in your database. 
                                        Please ensure you have exported your current data if you want to keep it.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <form action="/admin/import/sql" method="POST" enctype="multipart/form-data" class="space-y-6" id="importForm">
                    <div>
                        <label for="sqlFile" class="block text-sm font-medium text-gray-700">
                            SQL File
                        </label>
                        <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md hover:border-gray-400 transition-colors duration-200" id="dropZone">
                            <div class="space-y-1 text-center">
                                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                                <div class="flex text-sm text-gray-600">
                                    <label for="sqlFile" class="relative cursor-pointer bg-white rounded-md font-medium text-purple-600 hover:text-purple-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-purple-500">
                                        <span id="fileLabel">Upload a file</span>
                                        <input id="sqlFile" name="sqlFile" type="file" accept=".sql,.txt" required class="sr-only">
                                    </label>
                                    <p class="pl-1">or drag and drop</p>
                                </div>
                                <p class="text-xs text-gray-500">
                                    SQL files up to 50MB
                                </p>
                            </div>
                        </div>
                    </div>

                    <!-- Progress Bar (hidden by default) -->
                    <div id="progressContainer" class="hidden">
                        <div class="bg-gray-200 rounded-full h-2.5 mb-4">
                            <div id="progressBar" class="bg-blue-600 h-2.5 rounded-full transition-all duration-300" style="width: 0%"></div>
                        </div>
                        <p id="progressText" class="text-sm text-gray-600 text-center">Uploading...</p>
                    </div>

                    <div class="flex justify-end space-x-3">
                        <a href="/admin/dashboard" 
                           id="cancelBtn"
                           class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500">
                            Cancel
                        </a>
                        <button type="submit" 
                                id="submitBtn"
                                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                            <svg class="w-4 h-4 mr-2" id="submitIcon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                            </svg>
                            <!-- Loading spinner (hidden by default) -->
                            <svg class="animate-spin -ml-1 mr-3 h-4 w-4 text-white hidden" id="loadingSpinner" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                            <span id="submitText">Replace All Data</span>
                        </button>
                    </div>
                </form>

                <!-- Loading Overlay -->
                <div id="loadingOverlay" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
                    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
                        <div class="mt-3 text-center">
                            <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100">
                                <svg class="animate-spin h-6 w-6 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                            </div>
                            <h3 class="text-lg leading-6 font-medium text-gray-900 mt-2">Importing Data</h3>
                            <div class="mt-2 px-7 py-3">
                                <p class="text-sm text-gray-500">
                                    Please wait while we process your SQL file. This may take a few moments depending on the file size.
                                </p>
                                <div class="mt-4">
                                    <div class="bg-gray-200 rounded-full h-2">
                                        <div class="bg-blue-600 h-2 rounded-full animate-pulse" id="overlayProgressBar" style="width: 30%"></div>
                                    </div>
                                    <p class="text-xs text-gray-500 mt-2" id="overlayProgressText">Processing SQL file...</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Instructions -->
        <div class="mt-8 bg-blue-50 border border-blue-200 rounded-md p-4">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <h3 class="text-sm font-medium text-blue-800">
                        Complete Database Replacement
                    </h3>
                    <div class="mt-2 text-sm text-blue-700">
                        <p>
                            The SQL file should contain INSERT statements generated by the export functionality of this system. 
                            All existing data will be deleted first, then the new data will be imported. This ensures a complete 
                            restoration of your database to the exact state when the export was created.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// File upload UI enhancement and loading states
document.addEventListener('DOMContentLoaded', function() {
    const fileInput = document.getElementById('sqlFile');
    const dropZone = document.getElementById('dropZone');
    const fileLabel = document.getElementById('fileLabel');
    const importForm = document.getElementById('importForm');
    const submitBtn = document.getElementById('submitBtn');
    const submitText = document.getElementById('submitText');
    const submitIcon = document.getElementById('submitIcon');
    const loadingSpinner = document.getElementById('loadingSpinner');
    const loadingOverlay = document.getElementById('loadingOverlay');
    const progressContainer = document.getElementById('progressContainer');
    const progressBar = document.getElementById('progressBar');
    const progressText = document.getElementById('progressText');
    const overlayProgressBar = document.getElementById('overlayProgressBar');
    const overlayProgressText = document.getElementById('overlayProgressText');
    const cancelBtn = document.getElementById('cancelBtn');
    
    let isUploading = false;
    
    // File selection handling
    fileInput.addEventListener('change', function(e) {
        const fileName = e.target.files[0]?.name;
        if (fileName) {
            fileLabel.textContent = fileName;
            dropZone.classList.add('border-green-400', 'bg-green-50');
        }
    });
    
    // Drag and drop functionality
    dropZone.addEventListener('dragover', function(e) {
        e.preventDefault();
        if (!isUploading) {
            dropZone.classList.add('border-purple-400', 'bg-purple-50');
        }
    });
    
    dropZone.addEventListener('dragleave', function(e) {
        e.preventDefault();
        dropZone.classList.remove('border-purple-400', 'bg-purple-50');
    });
    
    dropZone.addEventListener('drop', function(e) {
        e.preventDefault();
        if (isUploading) return;
        
        dropZone.classList.remove('border-purple-400', 'bg-purple-50');
        
        const files = e.dataTransfer.files;
        if (files.length > 0 && files[0].name.match(/\.(sql|txt)$/i)) {
            fileInput.files = files;
            const fileName = files[0].name;
            fileLabel.textContent = fileName;
            dropZone.classList.add('border-green-400', 'bg-green-50');
        }
    });
    
    // Form submission with loading states
    importForm.addEventListener('submit', function(e) {
        if (isUploading) {
            e.preventDefault();
            return;
        }
        
        const file = fileInput.files[0];
        if (!file) {
            e.preventDefault();
            alert('Please select a SQL file to upload.');
            return;
        }
        
        // Check file size (50MB = 52428800 bytes)
        if (file.size > 52428800) {
            e.preventDefault();
            alert('File size exceeds 50MB limit. Please choose a smaller file.');
            return;
        }
        
        // Check file extension
        if (!file.name.match(/\.(sql|txt)$/i)) {
            e.preventDefault();
            alert('Please select a valid SQL file (.sql or .txt extension).');
            return;
        }
        
        // Start loading state
        startLoading();
        
        // Simulate progress (since we can't track actual upload progress with form submission)
        simulateProgress();
        
        // Note: The form will continue to submit after this
    });
    
    function startLoading() {
        isUploading = true;
        
        // Update button state
        submitBtn.disabled = true;
        submitBtn.classList.add('opacity-50', 'cursor-not-allowed');
        submitBtn.classList.remove('hover:bg-red-700');
        
        // Show loading spinner in button
        submitIcon.classList.add('hidden');
        loadingSpinner.classList.remove('hidden');
        submitText.textContent = 'Uploading...';
        
        // Disable cancel button
        cancelBtn.classList.add('opacity-50', 'pointer-events-none');
        
        // Show progress bar
        progressContainer.classList.remove('hidden');
        
        // Show loading overlay after a short delay
        setTimeout(() => {
            loadingOverlay.classList.remove('hidden');
        }, 1000);
    }
    
    function simulateProgress() {
        let progress = 0;
        const interval = setInterval(() => {
            progress += Math.random() * 15;
            if (progress > 95) progress = 95; // Don't reach 100% until actual completion
            
            progressBar.style.width = progress + '%';
            overlayProgressBar.style.width = progress + '%';
            
            if (progress < 30) {
                progressText.textContent = 'Uploading file...';
                overlayProgressText.textContent = 'Uploading SQL file...';
            } else if (progress < 60) {
                progressText.textContent = 'Processing data...';
                overlayProgressText.textContent = 'Clearing existing data...';
            } else if (progress < 90) {
                progressText.textContent = 'Importing records...';
                overlayProgressText.textContent = 'Importing new records...';
            } else {
                progressText.textContent = 'Finalizing...';
                overlayProgressText.textContent = 'Finalizing import...';
            }
            
            // Clear interval when we get close to completion
            // The actual page redirect will happen when the server responds
            if (progress >= 95) {
                clearInterval(interval);
            }
        }, 200);
    }
    
    // Handle successful completion (this won't run due to redirect, but good to have)
    function completeLoading() {
        progressBar.style.width = '100%';
        overlayProgressBar.style.width = '100%';
        progressText.textContent = 'Import completed!';
        overlayProgressText.textContent = 'Import completed successfully!';
        
        setTimeout(() => {
            loadingOverlay.classList.add('hidden');
            progressContainer.classList.add('hidden');
            isUploading = false;
        }, 1000);
    }
    
    // Handle browser back/forward navigation
    // Removed beforeunload event as it's unnecessary for this use case
    
    // Reset loading state if user navigates back
    window.addEventListener('pageshow', function(e) {
        if (e.persisted) {
            // Page was loaded from cache, reset state
            isUploading = false;
            loadingOverlay.classList.add('hidden');
            progressContainer.classList.add('hidden');
        }
    });
});
</script>

#endexport
#endextend
